body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
}

#form {
  background: rgba(0, 0, 0, 0.15);
  padding: 0.25rem;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  height: 3rem;
  box-sizing: border-box;
  /* --webkit-backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px); */
}

#input {
  border: none;
  padding: 0 1rem;
  flex-grow: 1;
  border-radius: 2rem;
  margin: 0.25rem;
}

#input:focus {
  outline: none;
}

#form>button {
  background: #333;
  border: none;
  padding: 0 1rem;
  margin: 0.25rem;
  border-radius: 3px;
  outline: none;
  color: #fff;
}

.doublecolumnleft {
  list-style-type: none;
  padding: 0;
}

.doublecolumnright {
  list-style-type: none;
  padding: 0;
}

.messages {
  list-style-type: none;
  padding: 0;
  font-size: x-small;
}

.messages>li {
  border: 0px solid transparent;
  border-radius: 0px;
  margin: 0px 0px;
  background-color: rgba(52, 63, 72, 0.9);
  color: yellow;
  padding: 0px 0px 0px 2px;
}

canvas {
  margin: 0px 0px 40px 0px;
}

.messages>li:nth-child(odd) {
  background-color: rgba(62, 73, 82, 0.9);
}

.treeDiv {
  position: relative;
  padding: 0px 0px 0px 10px;
  margin: 0px;
  /* border:1px solid green; */
}

@keyframes errorfade {
  0% {
    opacity: 1;
  }

  75% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.startScreen {
  height: 100vh;
  background-color: rgba(52, 63, 72, 0.9);
  width: 100%;
  /*overflow:hidden;*/
}

.zoomwindow {
  position: absolute;
  pointer-events: none;
  left: 50px;
  right: 50px;
  top: 50px;
  height: 150px;
  background-color: rgba(0, 255, 0, 0.3);
  border: 1px solid green
}

.tabGeneratorBase {
  /* display: flex; */
  flex-direction: column;
  height:100%;
  width:100%
}

.basescreen {
  flex-direction: column;
  /* default value; can be omitted */
  justify-content: space-between;
  font-weight: lighter;
  color: yellow;
  height: 100%;
  width:100%;
}

.columns {
  display: flex;
  flex-direction: row;
  height: 100%;
  color: black;
}

.rows {
  display: flex;
  flex-direction: column;
}

.tabSelect {
  width: 99%;
  height: 22px;
  padding: 5px;
}

.topLevelSelectorBackground {
  background-color: black;
}

.labelStyle {
  color: black;
}

.tabButton {
  background-color: black;
  color: gray;
  padding: 5px;
  border: 1px solid yellow;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.tabButton:hover {
  background: darkgray;
  transition: background-color 100ms linear;
}

.tabButton:active {
  background: lightgray;
  transition: background-color 100ms linear;
  color: black
}

.tabContent {
  display:flex;
  background-color: rgba(52, 63, 72, 0.9);
  color: yellow;
  /* overflow: hidden; */
  border-top: 1px solid yellow;
  width: 99%;
  height:95%
  /* height: 92vh; */
  /* margin: 0;
  padding: 0;
  /* vertical-align: bottom; */
}

.underlined {
  text-decoration: underline;
}

.errorTab {
  padding: 20px;
  margin: 10px;
  border: 10px solid yellow;
  color: yellow;
  background-color: black;
  position: absolute;
  width: 400px;
  right: -5px;
  top: -5px;
  z-index: 100;
  animation-name: errorfade;
  animation-duration: 15s;
}

.methodDiv {
  padding: 0px;
  margin: 2px;
  /* border-bottom: 1px solid rgba(52, 63, 72, 0.9); */
}

.methodInputStyle {
  width: 50%;
  display: inline
}

.methodJoiningProcess {
  padding-left: 20px;
}

.buttonAreaStyle {
  display: block
}

.tightUL {
  padding: 0px;
}

.myHeader {
  background: darkgray;
  position: relative;
  top: 0px;
  left: 0px;
  right: 0px;
  color: white;
  padding: 5px;
}

.textHeader {
  font-weight: bold;
  text-shadow: 1px 1px black;
  text-decoration-line: underline;
}

.updownpointer {
  cursor: n-resize;
}

.pointer {
  cursor: pointer;
}

.selectpointer {
  cursor: pointer;
}

.myLabel {
  color: black;
  margin: 5px;
}

.myLabelWidth {
  width: 40%;
  display: inline-block;
}

.inputStyle {
  width: 50%;
  display: inline
}

.myButton {
  background: IndianRed;
  color: black;
  margin: 5px;
}

.methodBorder {
  border: 1px solid black
}

.methodRowDistance {
  padding: 0px 5px
}

.myButton:hover {
  background: IndianRed;
}

.myButton:active {
  background: yellow;
}


.invisButton {
  background: transparent;
  border-color: transparent;
  border-width: 0px;
  color: black;
  margin: 5px;
}

.invisButton:hover {
  background: IndianRed;
}

.invisButton:active {
  background: yellow;
}



.ogbutton:active {
  background-color: #000000;
  border: 1px yellow solid;
  color: black;
}

.myButtonSelected {
  background: yellow;
}

.serverRow {
  border-bottom: 1px solid black;
  text-align: left;
}

.serverName {
  display: inline-block;
  text-align: center;
  width: 28%;
  padding: 3px;
}

.serverEndpoint {
  text-align: center;
  display: inline-block;
  width: 28%;
  padding: 3px;
}

.serverConnect {
  display: inline-block;
  text-align: center;
  width: 12%;
  padding: 3px;
}

.serverDelete {
  display: inline-block;
  text-align: center;
  width: 15%;
  padding: 3px;
}

.arrayLine {
  border-left: 2px solid blue;
  border-bottom: 2px solid blue;
  margin: 2px;
}

.objectLine {
  border-left: 10px solid green;
  margin: 2px;
}

/* Remove default bullets */
ul,
#myUL {
  list-style-type: none;
}

/* Remove margins and padding from the parent ul */
#myUL {
  margin: 0;
  padding: 0;
}

/* Style the caret/arrow */
.caret {
  cursor: pointer;
  -webkit-user-select: none;
  user-select: none;
  /* Prevent text selection */
}

/* Create the caret/arrow with a unicode, and style it */
.caret::before {
  content: '\25B6';
  color: black;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.caret-down::before {
  transform: rotate(90deg);
}

/* Hide the nested list */
.nested {
  display: none;
}

/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
.active {
  display: block;
}

.lefthalf {
  width: 49%;
  max-height: 97%;
  display: inline-block;
  margin: 10px 0px 0px 10px;
  /* display: inline-block; */
}

.righthalf {
  width: 49%;
  max-height: 97%;
  display: inline-block;
  margin: 10px 0px 0px 10px;
}

.traceList {
  border-color: blue;
  border-style: solid;
  border-width: 2px;
  border-radius: 5;
}

.envelopeleft {
  background: lightgray;
  
  width: 98%;
  overflow: auto;
}

.envSelect {
  width: 100%
}

.myInfoArea,
.scrollableInfoArea, .scrollSeparated {
  background: lightgray;
}


.scrollableInfoArea, .scrollSeparated {
  overflow: auto;
  height: 100vh;
}

.scrollSeparated {
  padding: 5em;
}

.scrollFull {
  overflow: auto;
  height: 100%;
  margin: 0px 5px;
}

.namedInfoArea {
  background: transparent;
  overflow: hidden;
}

.smallSettingArea {
  margin: 5px;
  min-width: 180px;
  width: 50%
}

.limitDragbox {
  width: 10px;
  height: 10px;
  margin: -5px;
  background-color: yellow;
  border: solid red 1px;
  position: absolute;
}
.limitDragboxStart {
  width: 20px;
  height: 20px;
  margin: -10px;
  background-color: rgba(0, 0, 0, 0.15);
  position: absolute;
}

.limitDragboxEnd {
  width: 30px;
  height: 30px;
  margin: -15px;
  background-color: rgba(0, 0, 0, 0.15);
  position: absolute;
}

.ViolationBox {
  width: 10px;
  height: 10px;
  margin: -5px;
  background-color: red;
  position: absolute;
}

.errorBackground {
  background-color: red;
  color: yellow;
}

.triggerDragbox {
  width: 10px;
  height: 10px;
  margin: -5px;
  background-color: green;
  border: solid red 1px;
  position: absolute;
}

.thinView {
  margin: 5px;
  min-width: 140px;
  width: 140px;
}

.indent {
  margin-left: 15px;
}

html {
  background-color: #000000;
}

.tabrow {
  display: flex;
  flex-direction: row;
  width:98%; 
  color: yellow;
}

.tableft {
  flex-grow: 4;
}

.tabright {
  flex-basis: content;
  align-self: center;
}

.topRow {
  background-color: #000000;
}

.tab {
  float:left;
  border:1px solid purple
}



.tabs {
  float: none;
  list-style: none;
  position: relative;
  text-align: left;
  margin: 10px 15px 5px 15px;
  background-color: rgba(52, 63, 72, 0.9);
}

.tabs>li {
  float: left;
  display: block;
  border-top: solid #FCDF07 3px;
  border-left: solid #FCDF07 3px;
  border-right-style: solid #FCDF07 3px;
  border-radius: 10px 10px 0px 0px;
  color: #FCDF07;
  padding: 15px;
  background-color: rgba(52, 63, 72, 0.9);
}

.tabs input[type='radio'] {
  position: absolute;
  top: 0;
  left: -9999px;
}

.tabs [id^='tab']:checked+label {
  background-color: black;
  font-weight: 500;
}

.tabs [id^='tab']:checked~[id^='tab-content'] {
  display: block;
}

.tab-content {
  border-top: 3px #FCDF07 solid;
  background-color: rgba(52, 63, 72, 1.0);
  z-index: 2;
  display: none;
  overflow: hidden;
  font-size: 17px;
  line-height: 25px;
  padding: 5px;
  position: fixed;
  top: 60px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background: 'pink';
}

.connectedServer {
  position: fixed;
  top: 5px;
  right: 5px;
  width: 150px;
  border: 1px #FCDF07 solid;
  color: #FCDF07;
  background-color: rgba(52, 63, 72, 0.9);
}

.connectedServerName {
  display: block;
}

.traceArea {
  overflow: hidden;
  height: 100%;
  position:relative; 
}

#myChart {
  width: 100%;
  height: 100%;
}

.traceButtonArea {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  height: 27%;
}


.kvPair {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.kvKey {
  color: black;
  width: 50%;
}

.kvValue {
  width: 50%;
}

.kvSelect {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  color: black;
  cursor: pointer;
  background-color: darkgray;
  width: 100%;
  padding: 5px;
}

.asset {
  color: black;
  cursor: pointer;
  border-color: black;
  border-width: 1px;
  border-style: solid;
  width: 90%;
  padding: 25px;
  margin: 20px;
}

.drawAssetBox {
  /* border: 2px solid gray; */
  position: fixed;
  top: 115px;
  left: 15px;
  right: 30px;
  bottom: 35px;
  /* background-color: green; */
}

.canvasBox {
  border: 2px solid orange;
  position: fixed;
  top: 200px;
  left: 200px;
  right: 200px;
  bottom: 200px;
}

.assetArea {
  position: absolute;
  top:0%;
  left:0%;
  bottom:0%;
  right:0%;
  color: yellow;

}

.assetBox {
  border: 1px solid black;
  position: absolute;
  word-wrap: break-word;
}

.controllerBox {
  background-color: green;
  position: absolute;
}

.controllerBox {
  height: 100px;
}

.toolBox {
  background-color: blue;
  position: absolute;
}

.offColor {
  color:IndianRed;
}

.onColor {
  color:green;
}

.drawResultBox {
  margin: 10px;
  padding: 10px;
  font-size: xx-small;
}

.resPartial {
  border-style: dotted;
}

.resFull {
  border-style: solid;
}

.resNOK {
  background-color: red;
  color: white;
}
.resOK {
  background-color: green;
  color: white;
}

.resTightening {
  border-width: 2px;
  border-color: black;
  background-color: rgba(75, 172,  198, 1);
  text-align: center;
  color: black;
  margin: 0px 5px 0px 0px;
  padding: 5px;
}

.resBatch {
  background-color: rgba(192, 80,  70, 1);
  border-width: 2px;
  border-color: black;
  color: black;
  text-align: center;
  margin: 0px 5px 0px 0px;
  padding: 5px;
}

.resJob {
  background-color: rgba(146, 208,  80, 1);
  border-width: 2px;
  border-color: black;
  color: black;
  text-align: center;
  margin: 0px 5px 0px 0px;
  padding: 5px;
}

.resOther {
  background-color: midnightblue;
  border-color: black;
  color: white;
  text-align: center;
  border-width: 1px;
  margin: 0px 5px 0px 0px;
}

.resReference {
  background-color: lightpink;
  color: gray;
}

.resNew1 {
  transition: box-shadow 5px 5px 5px black;
}

.resNew1 {
  animation: shadow1 15s;
}

@keyframes shadow1 {
  /* The 0% keyframe represents the initial state of the element */
  0% {
    box-shadow: 0 5px 5px rgba(0,0,0,0.25);
  }
 
  /* The 100% keyframe represents the final state of the element */
  100% {
    box-shadow: 0 5px 5px rgba(0,0,0,0);
  }
}

.resNew2 {
  transition: box-shadow 5px 5px 5px black;
}

.resNew2 {
  animation: shadow2 30s;
}

@keyframes shadow2 {
  /* The 0% keyframe represents the initial state of the element */
  0% {
    box-shadow: 0 5px 5px rgba(0,0,0,0.5);
  }
 
  /* The 100% keyframe represents the final state of the element */
  100% {
    box-shadow: 0 5px 5px rgba(0,0,0,0);
  }
}



.resNew3 {
  transition: box-shadow 5px 5px 5px black;
}

.resNew3 {
  animation: shadow3 45s;
}

@keyframes shadow3 {
  /* The 0% keyframe represents the initial state of the element */
  0% {
    box-shadow: 0 5px 5px rgba(0,0,0,0.75);
  }
 
  /* The 100% keyframe represents the final state of the element */
  100% {
    box-shadow: 0 5px 5px rgba(0,0,0,0);
  }
}


.resNew4 {
  transition: box-shadow 5px 5px 5px darkgrey;
}

.resNew4 {
  animation: shadow4 60s;
}

@keyframes shadow4 {
  /* The 0% keyframe represents the initial state of the element */
  0% {
    box-shadow: 0 5px 5px rgba(0,0,0,1);
  }
 
  /* The 100% keyframe represents the final state of the element */
  100% {
    box-shadow: 0 5px 5px rgba(0,0,0,0);
  }
}


.resBatchStacking {
  display:flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.resJobStacking {
  display:flex;
  flex-direction: column;
}


.resOtherStacking {
  display:flex;
  flex-direction: column;
}

.resultHeader {
  height: 20px;
  border: 1px solid IndianRed;
  display:flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.resultHeaderItem {
  display:inline;
  padding: 0px 5px;
}

.rootTop {
  display:flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}


.rootCenterRef {
  min-width: 10px;
  max-width: 1000px;
  display:flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
}

.rootCenterHier {
  min-width: 10px;
  max-width: 1000px;
  display:flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 5px;
  
}

.horStack {
  display:flex;
  flex-direction: row;
  justify-content: center;
  align-items:start
}

.rootChildRef {
  min-width: 10px;
  max-width: 1000px;
  display:flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
}

.rootChildHier {
  min-width: 10px;
  max-width: 1000px;
  display:flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 5px;
}


.snibbRow {
  display:flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width:100%;
}
.snibbNone {
  width: 50%;
  height: 10px;
}
.snibbRight {
  border-left: 1px solid black;
  width: 50%;
  height: 10px;
}
.snibbTopRef {
  border-top: 1px solid black;
}


.demoRow {
  display:flex;
  flex-direction: row;
  /*justify-content: center;
  align-items: center;*/
  height:97%;
  margin: 5px;
}

.demoCol {
  display:flex;
  flex-direction: column;
  height:97%;
  margin: 5px;
}

.demoButton {
  background-color: black;
  color: yellow;
  padding: 5px;
  border: 1px solid yellow;
  border-radius: 5px;
  margin: 10px;
}

.demoButton:hover {
  background: darkgray;
  transition: background-color 100ms linear;
}

.demoButton:active {
  background: lightgray;
  transition: background-color 100ms linear;
  color: black
}

.demoMachine {
  color: black;
  overflow: hidden;
  height: 180px;
  width: 500px;
}

.selectorArea {
  color: black;
  overflow: hidden;
  width: 300px;
  height: 305px;

}

.selectionArea {
  color: black;
  overflow: hidden;
}

.envelopeArea {
  color: black;
  overflow: hidden;
  width: 30%;
  margin: 0px 5px 0px 0px;
  padding: 0px;
  height: 100%;
}

.envdarken {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
}

.coverLayer {
  width: 0%;
  height: 0%;
  background: transparent;
  position: absolute;
  top:0px;
}

.drag-over {
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3);
}

.envpopup {
  display:flex;
  flex-direction: row;
  position: fixed;
  top: 10%;
  left: 10%;
  height: 40%;
  right: 10%;
  background: lightgray;
}

.demoHeading {
  font-weight: 600;
}

.demosettingArea {
  margin: 5px
}

.buttonArea {
  margin: 0px 0px 0px 10px;
  width: 95%
}


.treeButtonPlace {
  margin: -5px 0px -5px -5px;
  color: black;
  overflow:hidden;
}

.treeButton {
  display: inline;
  overflow:hidden;
}

.buttonFont {
  appearance: auto;
  text-rendering: auto;
  letter-spacing: normal;
  word-spacing: normal;
  line-height: normal;
  text-transform: none;
  text-indent: 0px;
  text-shadow: none;
  text-align: center;
  cursor: default;
  box-sizing: border-box;
  margin: 0em;
  padding-block: 1px;
  padding-inline: 6px;
}

.identifierType {
  font-weight: bold;
}

.identifier {
  font-weight: normal;
  padding: 0px 0px 0px 15px;
}

.identifier:hover {
  background: IndianRed;
  transition: background-color 100ms linear;
}

.idSelectDialog {
  position: absolute;
  left: 100px;
  right: 100px;
  bottom: 100px;
  top: 100px;
  z-index: 100000;
  border: 1px solid black;
  background-color: darkgray;
  font-weight: bold;
  padding: 5px;
}

.idSelectDialogGrayBackground {
  position: absolute;
  left: 1px;
  right: 1px;
  bottom: 1px;
  top: 1px;
  z-index: 99999;
  background-color: rgba(0, 0, 0, 0.676);
}

.methodLabel {
  display: inline-block;
  width: 50%;
  vertical-align: top;
}

.methodInput {
  width: 45%;
}

.methodInputRight {
  width: 45%;
  display: inline-block;
  padding-left: 0px;
}

.myCheckBox {
  margin-left: 0px;
}

.mainDropDown {
  background-color: lightgray;
}

.fillWidth {
  margin: 5px 0px 5px 5px ;
  width: 100%;
}

.bigTraceMargin {
  margin: 5px 0px 0px 5px;
}

.eventqueuehoverdiv {
  position: absolute;
  left: 10px;
  bottom: 15px;
  min-height: 62px;
  background-color: black;
  border: 1px solid yellow;
  color:yellow;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.eventQueuePeeks {
  padding: 0px 10px;
}

.eventInfo {
  display: flex;
  flex-direction: row;
  padding: 10px;
}

.complewrapper {
  margin: 10px -20px;
  padding: 10px;
  background: white;
}


.standardRow {
  display:flex;
  flex-direction: row;
}

.standardCol {
  display:flex;
  flex-direction: column;
}